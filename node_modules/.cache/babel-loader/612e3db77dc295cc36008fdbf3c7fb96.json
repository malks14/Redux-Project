{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\ncreateSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item = item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItemtotalPrice + newItem.price;\n      }\n    },\n\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Redux/Advanced/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","existingItemtotalPrice","removeItemToCart","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGAA,WAAW,CAAC;AACRC,EAAAA,IAAI,EAAE,MADE;AAERC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE;AAFL,GAFN;AAMRC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,GAAGA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA5C,CAArB;;AAEA,UAAG,CAACH,YAAJ,EAAkB;AACdJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AACbC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADH;AAEbG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAFF;AAGbC,UAAAA,QAAQ,EAAE,CAHG;AAIbC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAJP;AAKbhB,UAAAA,IAAI,EAAEQ,OAAO,CAACW;AALD,SAAjB;AAOH,OARD,MAQO;AACHT,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BE,sBAAsB,GAAGZ,OAAO,CAACQ,KAA3D;AACH;AACJ,KAjBK;;AAkBNK,IAAAA,gBAAgB,CAACf,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;;AACA,UAAIH,YAAY,CAACO,QAAb,KAA0B,CAA9B,EAAiC;AAC7BX,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYoB,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACM,KAAjE;AACH;AACJ;;AA3BK;AANF,CAAD,CAAX","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\ncreateSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0,\n    },\n    reducers: {\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find(item = item.id === newItem.id);\n\n            if(!existingItem) {\n                state.items.push({\n                    itemId: newItem.id, \n                    price: newItem.price, \n                    quantity: 1, \n                    totalPrice: newItem.price,\n                    name: newItem.title\n                });\n            } else {\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItemtotalPrice + newItem.price;\n            }\n        },\n        removeItemToCart(state, action) {\n            const id = action.payload;\n            const existingItem = state.items.find(item => item.id === id);\n            if (existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.id !== id);\n            } else {\n                existingItem.quantity--;\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n            }\n        }\n    }\n})"]},"metadata":{},"sourceType":"module"}