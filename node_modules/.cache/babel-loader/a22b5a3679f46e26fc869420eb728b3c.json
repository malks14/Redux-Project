{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\"; //action creator thunk\n\nexport const fetchCartData = () => {// try {\n  //     const cartData =  await fetchData();\n  //     dispatch(cartActions.replaceCart({\n  //         items: cartData.items || [],\n  //         totalQuantity: cartData.totalQuantity\n  //     }));\n  // } catch (error) {\n  //     dispatch(\n  //         uiActions.showNotification({\n  //           status: 'error',\n  //           title: 'Error...',\n  //           message: 'Sending cart data failed!',\n  //         })\n  //     );   \n  // }\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-cartapp-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Send cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Redux/Advanced/01-starting-project/src/store/cart-actions.js"],"names":["uiActions","cartActions","fetchCartData","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","items","totalQuantity","ok","Error","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B,C,CACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,CAK/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CArBM;AAuBP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CACJL,SAAS,CAACM,gBAAV,CAA2B;AACvBC,MAAAA,MAAM,EAAE,SADe;AAEvBC,MAAAA,KAAK,EAAE,YAFgB;AAGvBC,MAAAA,OAAO,EAAE;AAHc,KAA3B,CADI,CAAR;;AAQJ,UAAMC,WAAW,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAAD,EAC5B;AACAC,QAAAA,MAAM,EAAE,KADR;AAEAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAEb,IAAI,CAACa,KADK;AAEjBC,UAAAA,aAAa,EAAEd,IAAI,CAACc;AAFH,SAAf;AAFN,OAD4B,CAA5B;;AASJ,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AACf,cAAM,IAAIC,KAAJ,CAAW,2BAAX,CAAN;AACF;AACA,KAbD;;AAeA,QAAI;AACA,YAAMV,WAAW,EAAjB;AAEAL,MAAAA,QAAQ,CACJL,SAAS,CAACM,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADI,CAAR;AAQH,KAXD,CAWE,OAAOY,KAAP,EAAc;AACZhB,MAAAA,QAAQ,CACJL,SAAS,CAACM,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADI,CAAR;AAOH;AACA,GA5CD;AA6CH,CA9CM","sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n//action creator thunk\n\nexport const fetchCartData = () => {\n  \n\n  \n\n    // try {\n    //     const cartData =  await fetchData();\n    //     dispatch(cartActions.replaceCart({\n    //         items: cartData.items || [],\n    //         totalQuantity: cartData.totalQuantity\n    //     }));\n    // } catch (error) {\n    //     dispatch(\n    //         uiActions.showNotification({\n    //           status: 'error',\n    //           title: 'Error...',\n    //           message: 'Sending cart data failed!',\n    //         })\n    //     );   \n    // }\n \n};\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(\n            uiActions.showNotification({\n                status: 'pending',\n                title: 'Sending...',\n                message: 'Sending cart data!'\n            })\n        );\n        \n    const sendRequest = async () => {\n        const response = await fetch('https://redux-cartapp-default-rtdb.firebaseio.com/cart.json', \n        {\n        method: 'PUT',\n        body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity\n        })\n        });\n\n    if (!response.ok) {\n       throw new Error ('Sending cart data failed.')\n    }\n    };\n\n    try {  \n        await sendRequest();\n\n        dispatch(\n            uiActions.showNotification({\n              status: 'success',\n              title: 'Success!',\n              message: 'Send cart data successfully!'\n            })\n          );\n    \n    } catch (error) {\n        dispatch(\n            uiActions.showNotification({\n              status: 'error',\n              title: 'Error...',\n              message: 'Sending cart data failed!',\n            })\n          );   \n    }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}