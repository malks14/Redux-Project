{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Redux/Advanced/01-starting-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sendCartData, fetchCartData } from './store/cart-actions';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"+0lLiRKB8WOzaKnbCMqO0rhbWxM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Redux/Advanced/01-starting-project/src/App.js"],"names":["useEffect","Fragment","useSelector","useDispatch","sendCartData","fetchCartData","Cart","Layout","Products","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","changed","status","title","message"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,sBAA5C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA5B;AACA,QAAMC,IAAI,GAAGf,WAAW,CAAEY,KAAK,IAAIA,KAAK,CAACG,IAAjB,CAAxB;AACA,QAAMC,YAAY,GAAGhB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASG,YAAnB,CAAhC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIU,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAED,QAAIO,IAAI,CAACE,OAAT,EAAkB;AAChBP,MAAAA,QAAQ,CAACR,YAAY,CAACa,IAAD,CAAb,CAAR;AACD;;AAEDL,IAAAA,QAAQ,CAACR,YAAY,CAACa,IAAD,CAAb,CAAR;AACD,GAZQ,EAYN,CAACA,IAAD,EAAOL,QAAP,CAZM,CAAT;AAcA,sBACI,QAAC,QAAD;AAAA,eACGM,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACE,MADvB;AAEE,MAAA,KAAK,EAAEF,YAAY,CAACG,KAFtB;AAGE,MAAA,OAAO,EAAEH,YAAY,CAACI;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,iBACGT,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeD;;GAvCQF,G;UACUR,W,EACAD,W,EACJA,W,EACQA,W;;;KAJdS,G;AAyCT,eAAeA,GAAf","sourcesContent":["import { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { sendCartData, fetchCartData } from './store/cart-actions';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector((state => state.cart)); \n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    } \n\n    dispatch(sendCartData(cart))\n  }, [cart, dispatch]);\n\n  return (\n      <Fragment>\n        {notification && (\n          <Notification \n            status={notification.status} \n            title={notification.title} \n            message={notification.message}\n          />\n        )}\n        <Layout>\n          {showCart && <Cart />}\n          <Products />\n        </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}